@using System.Globalization
@inject NavigationManager Navigation
@inject ILogger<LanguageSwitcher> Logger
@rendermode InteractiveServer

<div class="language-switcher">
    <div class="flex items-center space-x-2">
        <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"/>
        </svg>

         <select @bind="SelectedCulture"
                class="bg-white border border-gray-300 rounded px-2 py-1 text-sm text-gray-700 cursor-pointer focus:outline-none focus:ring-2 focus:ring-blue-500"
                style="min-width: 100px;">
            <option value="en">English</option>
            <option value="ar">العربية</option>
        </select>
    </div>
</div>

@code {
    private string _selectedCulture = "en";

    private string SelectedCulture
    {
        get => _selectedCulture;
        set
        {
            if (_selectedCulture == value || string.IsNullOrWhiteSpace(value)) return;
            _selectedCulture = value;
            Logger.LogInformation("Language changed to: {Culture}", value);

            var currentUri = new Uri(Navigation.Uri);
            var returnUrl = currentUri.PathAndQuery;

            var url = $"/Culture/Set?culture={value}&returnUrl={Uri.EscapeDataString(returnUrl)}";
             Navigation.NavigateTo(url, forceLoad: true);
        }
    }

    protected override void OnInitialized()
    {
        var culture = CultureInfo.CurrentUICulture.Name;
        _selectedCulture = culture.StartsWith("ar") ? "ar" : "en";
        // Remove initialization logging to reduce noise
    }
}
